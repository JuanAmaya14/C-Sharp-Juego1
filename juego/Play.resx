<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Galleta.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>